CREATE OR REPLACE PACKAGE PANADERIA_SAN_CARLOS.PKG_PANADERIA_SAN_CARLOS AS
  -- Procedimiento para iniciar el proceso de producción
  PROCEDURE INICIAR_PROCESO_PRODUCCION(COD_USUARIO_PRODUCCION IN VARCHAR2 DEFAULT NULL, pError IN OUT VARCHAR2, pDescripcionError IN OUT VARCHAR2);
  
  -- Procedimiento para distribuir pedidos
  PROCEDURE SP_DISTRIBUIR_PEDIDOS (pError IN OUT VARCHAR2, pDescripcionError IN OUT VARCHAR2);
  
  -- Procedimiento para producción de pedidos ingresados
  PROCEDURE SP_PRODUCCION_PEDIDOS_INGRESADOS(USUARIO_PANIFICADOR IN VARCHAR2 DEFAULT NULL, pError IN OUT VARCHAR2, pDescripcionError IN OUT VARCHAR2);
END PKG_PANADERIA_SAN_CARLOS;
/

CREATE OR REPLACE PACKAGE BODY PANADERIA_SAN_CARLOS.PKG_PANADERIA_SAN_CARLOS AS
PROCEDURE INICIAR_PROCESO_PRODUCCION (COD_USUARIO_PRODUCCION IN VARCHAR2 DEFAULT NULL, pError IN OUT VARCHAR2, pDescripcionError IN OUT VARCHAR2) AS
BEGIN 
  -- Iniciar la transacción
  SAVEPOINT inicio_proceso;
  
  BEGIN
    pError := '0'; 
    -- Intentar ejecutar SP_PRODUCCION_PEDIDOS_INGRESADOS
    SP_PRODUCCION_PEDIDOS_INGRESADOS(COD_USUARIO_PRODUCCION, pError, pDescripcionError);
    
    -- Intentar ejecutar SP_DISTRIBUIR_PEDIDOS
    SP_DISTRIBUIR_PEDIDOS(pError, pDescripcionError);
    
    -- Confirmar la transacción
    COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO inicio_proceso;
      pError := '-1';
      pDescripcionError := ' INICIAR_PROCESO_PRODUCCION: ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE || pDescripcionError;      
  END;
END INICIAR_PROCESO_PRODUCCION;

PROCEDURE SP_DISTRIBUIR_PEDIDOS (pError IN OUT VARCHAR2, pDescripcionError IN OUT VARCHAR2) AS
BEGIN
  -- Iniciar la transacción
  SAVEPOINT inicio_proceso;

  BEGIN
    pError := '0';  
    -- Actualizar existencias de productos finales
    FOR pedido_rec IN (SELECT COD_PEDIDO FROM PEDIDO_ENCABEZADO WHERE COD_ESTADO_PEDIDO = 'EP003') LOOP
      FOR producto_rec IN (SELECT COD_PRODUCTO_FINAL, CANTIDAD FROM PEDIDO_DETALLE WHERE COD_PEDIDO = pedido_rec.COD_PEDIDO) LOOP
        UPDATE PRODUCTO
        SET EXISTENCIA = EXISTENCIA - producto_rec.CANTIDAD
        WHERE COD_PRODUCTO = producto_rec.COD_PRODUCTO_FINAL;
      END LOOP;
      UPDATE PEDIDO_ENCABEZADO
      SET COD_ESTADO_PEDIDO = 'EP004'
      WHERE COD_PEDIDO = pedido_rec.COD_PEDIDO;
    END LOOP;

    -- Confirmar la transacción
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('PROCESO FINALIZADO CORRECTAMENTE');
  EXCEPTION
    WHEN OTHERS THEN
      -- En caso de error, realizar un rollback
      ROLLBACK TO inicio_proceso;
        pError := '-1';
        pDescripcionError := ' SP_DISTRIBUIR_PEDIDOS: ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE || pDescripcionError;          
        DBMS_OUTPUT.PUT_LINE('ERROR EN EL PROCESO');
  END;
END SP_DISTRIBUIR_PEDIDOS;

PROCEDURE SP_PRODUCCION_PEDIDOS_INGRESADOS (USUARIO_PANIFICADOR IN VARCHAR2 DEFAULT NULL, pError IN OUT VARCHAR2, pDescripcionError IN OUT VARCHAR2) AS
  COD_PRODUCCION NUMBER;
BEGIN
pError := '0';

  -- Insertar producción encabezado y obtener el código de producción
  INSERT INTO PRODUCCION_ENCABEZADO (FECHA, COD_USUARIO_PANIFICADOR) VALUES (SYSDATE, USUARIO_PANIFICADOR)
  RETURNING COD_PRODUCCION INTO COD_PRODUCCION;

  -- Insertar producción detalle pedido
  INSERT INTO PRODUCCION_DETALLE_PEDIDO (COD_PRODUCCION, COD_PEDIDO)
  SELECT COD_PRODUCCION, COD_PEDIDO
  FROM PEDIDO_ENCABEZADO
  WHERE COD_ESTADO_PEDIDO = 'EP001';

  -- Cambiar estado a los pedidos a "EN PRODUCCIÓN"
  UPDATE PEDIDO_ENCABEZADO A
  SET COD_ESTADO_PEDIDO = 'EP002'
  WHERE EXISTS (
    SELECT 1
    FROM PRODUCCION_DETALLE_PEDIDO B
    WHERE A.COD_PEDIDO = B.COD_PEDIDO
    AND B.COD_PRODUCCION = COD_PRODUCCION
  );

  -- Insertar producción detalle material utilizado
  INSERT INTO PRODUCCION_DETALLE_MATERIAL_UTILIZADO (COD_PRODUCCION, COD_PRODUCTO_MATERIAL, CANTIDAD)
  SELECT COD_PRODUCCION, COD_PRODUCTO_MATERIAL, SUM(PD.CANTIDAD * RD.CANTIDAD) AS CANTIDAD_MATERIAL
  FROM PRODUCCION_DETALLE_PEDIDO PDP
  JOIN PEDIDO_ENCABEZADO PE ON PE.COD_PEDIDO = PDP.COD_PEDIDO
  JOIN PEDIDO_DETALLE PD ON PD.COD_PEDIDO = PE.COD_PEDIDO
  JOIN RECETA_ENCABEZADO RE ON RE.COD_PRODUCTO_FINAL = PD.COD_PRODUCTO_FINAL
  JOIN RECETA_DETALLE RD ON RD.COD_RECETA = RE.COD_RECETA
  WHERE PDP.COD_PRODUCCION = COD_PRODUCCION
  GROUP BY COD_PRODUCCION, COD_PRODUCTO_MATERIAL;
  
  --AGRUPA Y ALMACENA LOS PRODUCTOS FINALES DE LOS DIFERENTES PEDIDOS DE LA PRODUCCIÓN EN CURSO.
  INSERT INTO PRODUCCION_DETALLE_PRODUCTO_FINAL (COD_PRODUCCION, COD_PRODUCTO_FINAL, CANTIDAD)
    SELECT
      COD_PRODUCCION,
      PD.COD_PRODUCTO_FINAL,
      SUM(PD.CANTIDAD) AS CANTIDAD_PRODUCTO_FINAL
    FROM PRODUCCION_DETALLE_PEDIDO PDP
    JOIN PEDIDO_ENCABEZADO PE ON PE.COD_PEDIDO = PDP.COD_PEDIDO
    JOIN PEDIDO_DETALLE PD ON PD.COD_PEDIDO = PE.COD_PEDIDO
    JOIN RECETA_ENCABEZADO RE ON RE.COD_PRODUCTO_FINAL = PD.COD_PRODUCTO_FINAL
    WHERE PDP.COD_PRODUCCION = COD_PRODUCCION
    GROUP BY COD_PRODUCCION, PD.COD_PRODUCTO_FINAL;  

  -- Actualizar existencias de materiales
  FOR material_rec IN (SELECT COD_PRODUCTO_MATERIAL, CANTIDAD FROM PRODUCCION_DETALLE_MATERIAL_UTILIZADO WHERE COD_PRODUCCION = COD_PRODUCCION) LOOP
    UPDATE PRODUCTO
    SET EXISTENCIA = EXISTENCIA - material_rec.CANTIDAD
    WHERE COD_PRODUCTO = material_rec.COD_PRODUCTO_MATERIAL;
  END LOOP;
  
  -- Actualizar existencias de productos finales
  FOR producto_fin IN (SELECT COD_PRODUCTO_FINAL, CANTIDAD FROM PRODUCCION_DETALLE_PRODUCTO_FINAL WHERE COD_PRODUCCION = COD_PRODUCCION) LOOP
    UPDATE PRODUCTO
    SET EXISTENCIA = EXISTENCIA + producto_fin.CANTIDAD
    WHERE COD_PRODUCTO = producto_fin.COD_PRODUCTO_FINAL;
  END LOOP;
  
  -- Cambiar estado de los pedidos a "EN BODEGA LISTO PARA ENVÍO"
  UPDATE PEDIDO_ENCABEZADO A
  SET COD_ESTADO_PEDIDO = 'EP003'
  WHERE EXISTS (
    SELECT 1
    FROM PRODUCCION_DETALLE_PEDIDO B
    WHERE A.COD_PEDIDO = B.COD_PEDIDO
    AND B.COD_PRODUCCION = COD_PRODUCCION
  );

  COMMIT;
  DBMS_OUTPUT.PUT_LINE('PROCESO FINALIZADO CORRECTAMENTE');
EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    pError := '-1';
    pDescripcionError := ' SP_PRODUCCION_PEDIDOS_INGRESADOS: ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE || pDescripcionError;    
    DBMS_OUTPUT.PUT_LINE('ERROR EN EL PROCESO');
END SP_PRODUCCION_PEDIDOS_INGRESADOS;
END PKG_PANADERIA_SAN_CARLOS;
/

